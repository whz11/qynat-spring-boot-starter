<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.qingyou</groupId>
    <artifactId>qynat-spring-boot-starter</artifactId>
    <version>1.0.2</version>
    <name>qynat-spring-boot-starter</name>
    <properties>
        <java.version>1.8</java.version>
        <github.global.server>github</github.global.server>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.42.Final</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- protostuff -->
        <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-core</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-runtime</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.11.1</version>
        </dependency>
        <!-- protostuff -->

    </dependencies>

    <build>
        <finalName>qynat-spring-boot-starter</finalName>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-deploy-plugin</artifactId>-->
<!--                <version>2.8.2</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; altDeploymentRepository ：指定替代方案应该部署项目工件的存储库（除了指定的工件）。 &ndash;&gt;-->
<!--                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo-->
<!--                    </altDeploymentRepository>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash;github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>com.github.github</groupId>-->
<!--                <artifactId>site-maven-plugin</artifactId>-->
<!--                <version>0.12</version>-->
<!--                <configuration>-->
<!--                    <message>Creating site for ${project.artifactId} ${project.version}</message>-->
<!--                    <noJekyll>true</noJekyll>-->
<!--                    &lt;!&ndash;本地jar地址, 对应上面的altDeploymentRepository&ndash;&gt;-->
<!--                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>-->
<!--                    &lt;!&ndash;分支&ndash;&gt;-->
<!--                    <branch>refs/heads/master</branch>-->
<!--                    <merge>true</merge>-->

<!--                    <includes>-->
<!--                        <include>**/*</include>-->
<!--                    </includes>-->
<!--                    &lt;!&ndash;对应github上创建的仓库名称 name&ndash;&gt;-->
<!--                    <repositoryName>mvn-repo</repositoryName>-->
<!--                    &lt;!&ndash;github登录账号 对应的密码存在maven的setting.xml文件中&ndash;&gt;-->
<!--                    &lt;!&ndash;由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名&ndash;&gt;-->
<!--                    <repositoryOwner>whz11</repositoryOwner>-->
<!--                </configuration>-->

<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>site</goal>-->
<!--                        </goals>-->
<!--                        <phase>deploy</phase>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
